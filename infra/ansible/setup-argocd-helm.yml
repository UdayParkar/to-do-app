---
- name: Install ArgoCD via Helm and register To-Do app
  hosts: local
  gather_facts: no
  vars:
    argocd_namespace: argocd
    argocd_release_name: argocd
    values_file: infra/argocd/values.yaml
    app_manifest: infra/argocd/argocd-app.yaml

  tasks:
    - name: Ensure argocd namespace exists
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: "{{ argocd_namespace }}"
        state: present

    - name: Add Argo Helm repository
      ansible.builtin.command:
        cmd: helm repo add argo https://argoproj.github.io/argo-helm
      register: helm_repo
      changed_when: "'Successfully added' in helm_repo.stdout or helm_repo.rc == 0"

    - name: Update Helm repositories
      ansible.builtin.command:
        cmd: helm repo update
      changed_when: false

    - name: Install ArgoCD using Helm chart
      ansible.builtin.command:
        cmd: >
          helm install {{ argocd_release_name }} argo/argo-cd
          --namespace {{ argocd_namespace }}
          --create-namespace
          -f {{ values_file }}
      register: helm_install
      changed_when: "'STATUS: deployed' in helm_install.stdout or helm_install.rc == 0"

    - name: Wait for ArgoCD server to be ready
      shell: kubectl -n argocd wait --for=condition=available deployment/argocd-server --timeout=300s
      register: wait_result
      changed_when: false

    - name: Apply ArgoCD Application manifest (To-Do app)
      kubernetes.core.k8s:
        state: present
        src: "{{ app_manifest }}"
        namespace: "{{ argocd_namespace }}"

    - name: Get ArgoCD admin password
      shell: kubectl get secret -n argocd argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 --decode
      register: admin_pass
      changed_when: false

    - name: Get ArgoCD service URL
      shell: kubectl get svc -n argocd argocd-server -o jsonpath="{.status.loadBalancer.ingress[0].hostname}"
      register: svc_dns
      changed_when: false

    - name: Display ArgoCD Access Details
      debug:
        msg:
          - " ArgoCD successfully installed via Helm!"
          - " UI: https://{{ svc_dns.stdout | default('localhost:8080') }}"
          - " Username: admin"
          - " Password: {{ admin_pass.stdout }}"
